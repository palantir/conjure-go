// This file was generated by Conjure and should not be manually edited.

package spec

import (
	"strings"
)

type ErrorCode string

const (
	ErrorCodePermissionDenied      ErrorCode = "PERMISSION_DENIED"
	ErrorCodeInvalidArgument       ErrorCode = "INVALID_ARGUMENT"
	ErrorCodeNotFound              ErrorCode = "NOT_FOUND"
	ErrorCodeConflict              ErrorCode = "CONFLICT"
	ErrorCodeRequestEntityTooLarge ErrorCode = "REQUEST_ENTITY_TOO_LARGE"
	ErrorCodeFailedPrecondition    ErrorCode = "FAILED_PRECONDITION"
	ErrorCodeInternal              ErrorCode = "INTERNAL"
	ErrorCodeTimeout               ErrorCode = "TIMEOUT"
	ErrorCodeCustomClient          ErrorCode = "CUSTOM_CLIENT"
	ErrorCodeCustomServer          ErrorCode = "CUSTOM_SERVER"
	ErrorCodeUnknown               ErrorCode = "UNKNOWN"
)

func (e *ErrorCode) UnmarshalText(data []byte) error {
	switch strings.ToUpper(string(data)) {
	default:
		*e = ErrorCodeUnknown
	case "PERMISSION_DENIED":
		*e = ErrorCodePermissionDenied
	case "INVALID_ARGUMENT":
		*e = ErrorCodeInvalidArgument
	case "NOT_FOUND":
		*e = ErrorCodeNotFound
	case "CONFLICT":
		*e = ErrorCodeConflict
	case "REQUEST_ENTITY_TOO_LARGE":
		*e = ErrorCodeRequestEntityTooLarge
	case "FAILED_PRECONDITION":
		*e = ErrorCodeFailedPrecondition
	case "INTERNAL":
		*e = ErrorCodeInternal
	case "TIMEOUT":
		*e = ErrorCodeTimeout
	case "CUSTOM_CLIENT":
		*e = ErrorCodeCustomClient
	case "CUSTOM_SERVER":
		*e = ErrorCodeCustomServer
	}
	return nil
}

type HttpMethod string

const (
	HttpMethodGet     HttpMethod = "GET"
	HttpMethodPost    HttpMethod = "POST"
	HttpMethodPut     HttpMethod = "PUT"
	HttpMethodDelete  HttpMethod = "DELETE"
	HttpMethodUnknown HttpMethod = "UNKNOWN"
)

func (e *HttpMethod) UnmarshalText(data []byte) error {
	switch strings.ToUpper(string(data)) {
	default:
		*e = HttpMethodUnknown
	case "GET":
		*e = HttpMethodGet
	case "POST":
		*e = HttpMethodPost
	case "PUT":
		*e = HttpMethodPut
	case "DELETE":
		*e = HttpMethodDelete
	}
	return nil
}

type PrimitiveType string

const (
	PrimitiveTypeString      PrimitiveType = "STRING"
	PrimitiveTypeDatetime    PrimitiveType = "DATETIME"
	PrimitiveTypeInteger     PrimitiveType = "INTEGER"
	PrimitiveTypeDouble      PrimitiveType = "DOUBLE"
	PrimitiveTypeSafelong    PrimitiveType = "SAFELONG"
	PrimitiveTypeBinary      PrimitiveType = "BINARY"
	PrimitiveTypeAny         PrimitiveType = "ANY"
	PrimitiveTypeBoolean     PrimitiveType = "BOOLEAN"
	PrimitiveTypeUuid        PrimitiveType = "UUID"
	PrimitiveTypeRid         PrimitiveType = "RID"
	PrimitiveTypeBearertoken PrimitiveType = "BEARERTOKEN"
	PrimitiveTypeUnknown     PrimitiveType = "UNKNOWN"
)

func (e *PrimitiveType) UnmarshalText(data []byte) error {
	switch strings.ToUpper(string(data)) {
	default:
		*e = PrimitiveTypeUnknown
	case "STRING":
		*e = PrimitiveTypeString
	case "DATETIME":
		*e = PrimitiveTypeDatetime
	case "INTEGER":
		*e = PrimitiveTypeInteger
	case "DOUBLE":
		*e = PrimitiveTypeDouble
	case "SAFELONG":
		*e = PrimitiveTypeSafelong
	case "BINARY":
		*e = PrimitiveTypeBinary
	case "ANY":
		*e = PrimitiveTypeAny
	case "BOOLEAN":
		*e = PrimitiveTypeBoolean
	case "UUID":
		*e = PrimitiveTypeUuid
	case "RID":
		*e = PrimitiveTypeRid
	case "BEARERTOKEN":
		*e = PrimitiveTypeBearertoken
	}
	return nil
}
