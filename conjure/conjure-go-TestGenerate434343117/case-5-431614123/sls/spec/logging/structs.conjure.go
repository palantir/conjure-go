// This file was generated by Conjure and should not be manually edited.

package logging

import (
	"github.com/palantir/pkg/safejson"
	"github.com/palantir/pkg/safeyaml"
)

type BackingFileSystem struct {
	BaseUri           string            `json:"baseUri"`
	Configuration     map[string]string `json:"configuration"`
	ConfigurationList []string          `json:"configurationList"`
	ConfigurationSet  []string          `json:"configurationSet"`
}

func (o BackingFileSystem) MarshalJSON() ([]byte, error) {
	if o.Configuration == nil {
		o.Configuration = make(map[string]string, 0)
	}
	if o.ConfigurationList == nil {
		o.ConfigurationList = make([]string, 0)
	}
	if o.ConfigurationSet == nil {
		o.ConfigurationSet = make([]string, 0)
	}
	type BackingFileSystemAlias BackingFileSystem
	return safejson.Marshal(BackingFileSystemAlias(o))
}

func (o *BackingFileSystem) UnmarshalJSON(data []byte) error {
	type BackingFileSystemAlias BackingFileSystem
	var rawBackingFileSystem BackingFileSystemAlias
	if err := safejson.Unmarshal(data, &rawBackingFileSystem); err != nil {
		return err
	}
	if rawBackingFileSystem.Configuration == nil {
		rawBackingFileSystem.Configuration = make(map[string]string, 0)
	}
	if rawBackingFileSystem.ConfigurationList == nil {
		rawBackingFileSystem.ConfigurationList = make([]string, 0)
	}
	if rawBackingFileSystem.ConfigurationSet == nil {
		rawBackingFileSystem.ConfigurationSet = make([]string, 0)
	}
	*o = BackingFileSystem(rawBackingFileSystem)
	return nil
}

func (o BackingFileSystem) MarshalYAML() (interface{}, error) {
	jsonBytes, err := safejson.Marshal(o)
	if err != nil {
		return nil, err
	}
	return safeyaml.JSONtoYAMLMapSlice(jsonBytes)
}

func (o *BackingFileSystem) UnmarshalYAML(unmarshal func(interface{}) error) error {
	jsonBytes, err := safeyaml.UnmarshalerToJSONBytes(unmarshal)
	if err != nil {
		return err
	}
	return safejson.Unmarshal(jsonBytes, *&o)
}
