{
  "version" : 1,
  "errors" : [ ],
  "types" : [ {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "BearerTokenExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "BEARERTOKEN"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "BinaryExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "BINARY"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "BooleanExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "BOOLEAN"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "DateTimeExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "DATETIME"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "DoubleExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "DOUBLE"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "IntegerExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "RidExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "RID"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "SafeLongExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "SAFELONG"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "StringExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "UuidExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "UUID"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "AnyExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "primitive",
          "primitive" : "ANY"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ListExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "SetStringExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "set",
          "set" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "SetDoubleExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "set",
          "set" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "DOUBLE"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "MapExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            },
            "valueType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "OptionalExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "value",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "LongOptionalExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "someLongName",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "AliasString",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "StringAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "DoubleAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "DOUBLE"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "IntegerAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "INTEGER"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "BooleanAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "BOOLEAN"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "SafeLongAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "SAFELONG"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "RidAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "RID"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "BearerTokenAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "BEARERTOKEN"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "UuidAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "UUID"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "ReferenceAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "reference",
        "reference" : {
          "name" : "AnyExample",
          "package" : "com.palantir.conjure.verification"
        }
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "DateTimeAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "DATETIME"
      }
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "BinaryAliasExample",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "BINARY"
      }
    }
  }, {
    "type" : "enum",
    "enum" : {
      "typeName" : {
        "name" : "EnumExample",
        "package" : "com.palantir.conjure.verification"
      },
      "values" : [ {
        "value" : "ONE"
      }, {
        "value" : "TWO"
      } ]
    }
  }, {
    "type" : "enum",
    "enum" : {
      "typeName" : {
        "name" : "Enum",
        "package" : "com.palantir.conjure.verification"
      },
      "values" : [ {
        "value" : "ONE"
      }, {
        "value" : "TWO"
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "EnumFieldExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "enum",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "EnumExample",
            "package" : "com.palantir.conjure.verification"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "EmptyObjectExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ObjectExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "string",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "docs" : "docs for string field"
      }, {
        "fieldName" : "integer",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "docs" : "docs for integer field"
      }, {
        "fieldName" : "doubleValue",
        "type" : {
          "type" : "primitive",
          "primitive" : "DOUBLE"
        },
        "docs" : "docs for doubleValue field"
      }, {
        "fieldName" : "optionalItem",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "docs" : "docs for optionalItem field"
      }, {
        "fieldName" : "items",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "docs" : "docs for items field"
      }, {
        "fieldName" : "set",
        "type" : {
          "type" : "set",
          "set" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "docs" : "docs for set field"
      }, {
        "fieldName" : "map",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            },
            "valueType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "docs" : "docs for map field"
      }, {
        "fieldName" : "alias",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "StringAliasExample",
            "package" : "com.palantir.conjure.verification"
          }
        },
        "docs" : "docs for alias field"
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "KebabCaseObjectExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "kebab-cased-field",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "SnakeCaseObjectExample",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "snake_cased_field",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      } ]
    }
  }, {
    "type" : "union",
    "union" : {
      "typeName" : {
        "name" : "Union",
        "package" : "com.palantir.conjure.verification"
      },
      "union" : [ {
        "fieldName" : "stringExample",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "StringExample",
            "package" : "com.palantir.conjure.verification"
          }
        },
        "docs" : "Docs for when UnionTypeExample is of type StringExample."
      }, {
        "fieldName" : "set",
        "type" : {
          "type" : "set",
          "set" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      }, {
        "fieldName" : "thisFieldIsAnInteger",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      }, {
        "fieldName" : "alsoAnInteger",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      }, {
        "fieldName" : "if",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      }, {
        "fieldName" : "new",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      }, {
        "fieldName" : "interface",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        }
      } ],
      "docs" : "A type which can either be a StringExample, a set of strings, or an integer."
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "TestCases",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "client",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "ClientTestCases",
            "package" : "com.palantir.conjure.verification"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "ClientTestCases",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "autoDeserialize",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "reference",
              "reference" : {
                "name" : "PositiveAndNegativeTestCases",
                "package" : "com.palantir.conjure.verification"
              }
            }
          }
        }
      }, {
        "fieldName" : "singleHeaderService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "list",
              "list" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      }, {
        "fieldName" : "singlePathParamService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "list",
              "list" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      }, {
        "fieldName" : "singleQueryParamService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "list",
              "list" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      } ]
    }
  }, {
    "type" : "alias",
    "alias" : {
      "typeName" : {
        "name" : "EndpointName",
        "package" : "com.palantir.conjure.verification"
      },
      "alias" : {
        "type" : "primitive",
        "primitive" : "STRING"
      }
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "PositiveAndNegativeTestCases",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "positive",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      }, {
        "fieldName" : "negative",
        "type" : {
          "type" : "list",
          "list" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "IgnoredTestCases",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "client",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "IgnoredClientTestCases",
            "package" : "com.palantir.conjure.verification"
          }
        }
      } ]
    }
  }, {
    "type" : "object",
    "object" : {
      "typeName" : {
        "name" : "IgnoredClientTestCases",
        "package" : "com.palantir.conjure.verification"
      },
      "fields" : [ {
        "fieldName" : "autoDeserialize",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "set",
              "set" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      }, {
        "fieldName" : "singleHeaderService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "set",
              "set" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      }, {
        "fieldName" : "singlePathParamService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "set",
              "set" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      }, {
        "fieldName" : "singleQueryParamService",
        "type" : {
          "type" : "map",
          "map" : {
            "keyType" : {
              "type" : "reference",
              "reference" : {
                "name" : "EndpointName",
                "package" : "com.palantir.conjure.verification"
              }
            },
            "valueType" : {
              "type" : "set",
              "set" : {
                "itemType" : {
                  "type" : "primitive",
                  "primitive" : "STRING"
                }
              }
            }
          }
        }
      } ]
    }
  } ],
  "services" : [ {
    "serviceName" : {
      "name" : "SinglePathParamService",
      "package" : "com.palantir.conjure.verification"
    },
    "endpoints" : [ {
      "endpointName" : "pathParamBoolean",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamBoolean/{index}/{booleanParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "booleanParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "BOOLEAN"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamDatetime",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamDatetime/{index}/{datetimeParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "datetimeParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "DATETIME"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamDouble",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamDouble/{index}/{doubleParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "doubleParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "DOUBLE"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamInteger",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamInteger/{index}/{integerParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "integerParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamRid",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamRid/{index}/{ridParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "ridParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "RID"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamSafelong",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamSafelong/{index}/{safelongParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "safelongParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "SAFELONG"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamString",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamString/{index}/{stringParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "stringParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamUuid",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamUuid/{index}/{uuidParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "uuidParam",
        "type" : {
          "type" : "primitive",
          "primitive" : "UUID"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "pathParamAliasString",
      "httpMethod" : "POST",
      "httpPath" : "/pathParamAliasString/{index}/{aliasStringParam}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "aliasStringParam",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "AliasString",
            "package" : "com.palantir.conjure.verification"
          }
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    } ]
  }, {
    "serviceName" : {
      "name" : "SingleHeaderService",
      "package" : "com.palantir.conjure.verification"
    },
    "endpoints" : [ {
      "endpointName" : "headerBearertoken",
      "httpMethod" : "POST",
      "httpPath" : "/headerBearertoken/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerBearertoken",
        "type" : {
          "type" : "primitive",
          "primitive" : "BEARERTOKEN"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerBoolean",
      "httpMethod" : "POST",
      "httpPath" : "/headerBoolean/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerBoolean",
        "type" : {
          "type" : "primitive",
          "primitive" : "BOOLEAN"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerDatetime",
      "httpMethod" : "POST",
      "httpPath" : "/headerDatetime/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerDatetime",
        "type" : {
          "type" : "primitive",
          "primitive" : "DATETIME"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerDouble",
      "httpMethod" : "POST",
      "httpPath" : "/headerDouble/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerDouble",
        "type" : {
          "type" : "primitive",
          "primitive" : "DOUBLE"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerInteger",
      "httpMethod" : "POST",
      "httpPath" : "/headerInteger/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerInteger",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerRid",
      "httpMethod" : "POST",
      "httpPath" : "/headerRid/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerRid",
        "type" : {
          "type" : "primitive",
          "primitive" : "RID"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerSafelong",
      "httpMethod" : "POST",
      "httpPath" : "/headerSafelong/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerSafelong",
        "type" : {
          "type" : "primitive",
          "primitive" : "SAFELONG"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerString",
      "httpMethod" : "POST",
      "httpPath" : "/headerString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerString",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerUuid",
      "httpMethod" : "POST",
      "httpPath" : "/headerUuid/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerUuid",
        "type" : {
          "type" : "primitive",
          "primitive" : "UUID"
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerOptionalString",
      "httpMethod" : "POST",
      "httpPath" : "/headerOptionalString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerOptionalString",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "headerAliasString",
      "httpMethod" : "POST",
      "httpPath" : "/headerAliasString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "headerAliasString",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "AliasString",
            "package" : "com.palantir.conjure.verification"
          }
        },
        "paramType" : {
          "type" : "header",
          "header" : {
            "paramId" : "Some-Header"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    } ]
  }, {
    "serviceName" : {
      "name" : "AutoDeserializeConfirmService",
      "package" : "com.palantir.conjure.verification"
    },
    "endpoints" : [ {
      "endpointName" : "confirm",
      "httpMethod" : "POST",
      "httpPath" : "/confirm/{endpoint}/{index}",
      "args" : [ {
        "argName" : "endpoint",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "docs" : "The name of the endpoint where the automatic test case request was made.",
        "markers" : [ ]
      }, {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "docs" : "The index of the positive automatic test case.",
        "markers" : [ ]
      }, {
        "argName" : "body",
        "type" : {
          "type" : "primitive",
          "primitive" : "ANY"
        },
        "paramType" : {
          "type" : "body",
          "body" : { }
        },
        "markers" : [ ]
      } ],
      "docs" : "Send the response received for positive test cases here to verify that it has been serialized and deserialized properly.\n",
      "markers" : [ ]
    } ]
  }, {
    "serviceName" : {
      "name" : "AutoDeserializeService",
      "package" : "com.palantir.conjure.verification"
    },
    "endpoints" : [ {
      "endpointName" : "receiveBearerTokenExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveBearerTokenExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "BearerTokenExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveBooleanExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveBooleanExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "BooleanExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveDateTimeExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveDateTimeExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "DateTimeExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveDoubleExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveDoubleExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "DoubleExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveIntegerExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveIntegerExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "IntegerExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveRidExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveRidExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "RidExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveSafeLongExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveSafeLongExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "SafeLongExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveStringExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveStringExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "StringExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveUuidExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveUuidExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "UuidExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveAnyExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveAnyExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "AnyExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveListExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveListExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "ListExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveSetStringExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveSetStringExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "SetStringExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveSetDoubleExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveSetDoubleExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "SetDoubleExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveMapExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveMapExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "MapExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveOptionalExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveOptionalExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "OptionalExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveLongOptionalExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveLongOptionalExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "LongOptionalExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveStringAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveStringAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "StringAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveDoubleAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveDoubleAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "DoubleAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveIntegerAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveIntegerAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "IntegerAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveBooleanAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveBooleanAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "BooleanAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveSafeLongAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveSafeLongAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "SafeLongAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveRidAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveRidAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "RidAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveBearerTokenAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveBearerTokenAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "BearerTokenAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveUuidAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveUuidAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "UuidAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveReferenceAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveReferenceAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "ReferenceAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveDateTimeAliasExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveDateTimeAliasExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "DateTimeAliasExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveKebabCaseObjectExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveKebabCaseObjectExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "KebabCaseObjectExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    }, {
      "endpointName" : "receiveSnakeCaseObjectExample",
      "httpMethod" : "GET",
      "httpPath" : "/receiveSnakeCaseObjectExample/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      } ],
      "returns" : {
        "type" : "reference",
        "reference" : {
          "name" : "SnakeCaseObjectExample",
          "package" : "com.palantir.conjure.verification"
        }
      },
      "markers" : [ ]
    } ]
  }, {
    "serviceName" : {
      "name" : "SingleQueryParamService",
      "package" : "com.palantir.conjure.verification"
    },
    "endpoints" : [ {
      "endpointName" : "queryParamBearertoken",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamBearertoken/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "BEARERTOKEN"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamBoolean",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamBoolean/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "BOOLEAN"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamDouble",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamDouble/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "DOUBLE"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamInteger",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamInteger/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamRid",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamRid/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "RID"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamSafelong",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamSafelong/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "SAFELONG"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamString",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "STRING"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamUuid",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamUuid/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "primitive",
          "primitive" : "UUID"
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamOptionalString",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamOptionalString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "optional",
          "optional" : {
            "itemType" : {
              "type" : "primitive",
              "primitive" : "STRING"
            }
          }
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    }, {
      "endpointName" : "queryParamAliasString",
      "httpMethod" : "POST",
      "httpPath" : "/queryParamAliasString/{index}",
      "args" : [ {
        "argName" : "index",
        "type" : {
          "type" : "primitive",
          "primitive" : "INTEGER"
        },
        "paramType" : {
          "type" : "path",
          "path" : { }
        },
        "markers" : [ ]
      }, {
        "argName" : "someQuery",
        "type" : {
          "type" : "reference",
          "reference" : {
            "name" : "AliasString",
            "package" : "com.palantir.conjure.verification"
          }
        },
        "paramType" : {
          "type" : "query",
          "query" : {
            "paramId" : "foo"
          }
        },
        "markers" : [ ]
      } ],
      "markers" : [ ]
    } ]
  } ]
}