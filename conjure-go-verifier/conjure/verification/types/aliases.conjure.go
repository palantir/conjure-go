// This file was generated by Conjure and should not be manually edited.

package types

import (
	"github.com/palantir/pkg/bearertoken"
	"github.com/palantir/pkg/binary"
	"github.com/palantir/pkg/datetime"
	"github.com/palantir/pkg/rid"
	"github.com/palantir/pkg/safejson"
	"github.com/palantir/pkg/safelong"
	"github.com/palantir/pkg/uuid"
)

type SetBooleanAliasExample []bool
type SetDoubleAliasExample []float64
type StringAliasExample string
type MapBearerTokenAliasExample map[bearertoken.Token]bool

func (a MapBearerTokenAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[bearertoken.Token]bool(a))
}

func (a *MapBearerTokenAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapBearerTokenAliasExample map[bearertoken.Token]bool
	if err := safejson.Unmarshal(data, &rawMapBearerTokenAliasExample); err != nil {
		return err
	}
	*a = MapBearerTokenAliasExample(rawMapBearerTokenAliasExample)
	return nil
}

func (a MapBearerTokenAliasExample) MarshalYAML() (interface{}, error) {
	return map[bearertoken.Token]bool(a), nil
}

func (a *MapBearerTokenAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapBearerTokenAliasExample map[bearertoken.Token]bool
	if err := unmarshal(&rawMapBearerTokenAliasExample); err != nil {
		return err
	}
	*a = MapBearerTokenAliasExample(rawMapBearerTokenAliasExample)
	return nil
}

type ListDateTimeAliasExample []datetime.DateTime

func (a ListDateTimeAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]datetime.DateTime(a))
}

func (a *ListDateTimeAliasExample) UnmarshalJSON(data []byte) error {
	var rawListDateTimeAliasExample []datetime.DateTime
	if err := safejson.Unmarshal(data, &rawListDateTimeAliasExample); err != nil {
		return err
	}
	*a = ListDateTimeAliasExample(rawListDateTimeAliasExample)
	return nil
}

func (a ListDateTimeAliasExample) MarshalYAML() (interface{}, error) {
	return []datetime.DateTime(a), nil
}

func (a *ListDateTimeAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawListDateTimeAliasExample []datetime.DateTime
	if err := unmarshal(&rawListDateTimeAliasExample); err != nil {
		return err
	}
	*a = ListDateTimeAliasExample(rawListDateTimeAliasExample)
	return nil
}

type SetBearerTokenAliasExample []bearertoken.Token

func (a SetBearerTokenAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]bearertoken.Token(a))
}

func (a *SetBearerTokenAliasExample) UnmarshalJSON(data []byte) error {
	var rawSetBearerTokenAliasExample []bearertoken.Token
	if err := safejson.Unmarshal(data, &rawSetBearerTokenAliasExample); err != nil {
		return err
	}
	*a = SetBearerTokenAliasExample(rawSetBearerTokenAliasExample)
	return nil
}

func (a SetBearerTokenAliasExample) MarshalYAML() (interface{}, error) {
	return []bearertoken.Token(a), nil
}

func (a *SetBearerTokenAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSetBearerTokenAliasExample []bearertoken.Token
	if err := unmarshal(&rawSetBearerTokenAliasExample); err != nil {
		return err
	}
	*a = SetBearerTokenAliasExample(rawSetBearerTokenAliasExample)
	return nil
}

type ListBearerTokenAliasExample []bearertoken.Token

func (a ListBearerTokenAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]bearertoken.Token(a))
}

func (a *ListBearerTokenAliasExample) UnmarshalJSON(data []byte) error {
	var rawListBearerTokenAliasExample []bearertoken.Token
	if err := safejson.Unmarshal(data, &rawListBearerTokenAliasExample); err != nil {
		return err
	}
	*a = ListBearerTokenAliasExample(rawListBearerTokenAliasExample)
	return nil
}

func (a ListBearerTokenAliasExample) MarshalYAML() (interface{}, error) {
	return []bearertoken.Token(a), nil
}

func (a *ListBearerTokenAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawListBearerTokenAliasExample []bearertoken.Token
	if err := unmarshal(&rawListBearerTokenAliasExample); err != nil {
		return err
	}
	*a = ListBearerTokenAliasExample(rawListBearerTokenAliasExample)
	return nil
}

type MapUuidAliasExample map[uuid.UUID]bool

func (a MapUuidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[uuid.UUID]bool(a))
}

func (a *MapUuidAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapUuidAliasExample map[uuid.UUID]bool
	if err := safejson.Unmarshal(data, &rawMapUuidAliasExample); err != nil {
		return err
	}
	*a = MapUuidAliasExample(rawMapUuidAliasExample)
	return nil
}

func (a MapUuidAliasExample) MarshalYAML() (interface{}, error) {
	return map[uuid.UUID]bool(a), nil
}

func (a *MapUuidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapUuidAliasExample map[uuid.UUID]bool
	if err := unmarshal(&rawMapUuidAliasExample); err != nil {
		return err
	}
	*a = MapUuidAliasExample(rawMapUuidAliasExample)
	return nil
}

type SetStringAliasExample []string
type SetSafeLongAliasExample []safelong.SafeLong

func (a SetSafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]safelong.SafeLong(a))
}

func (a *SetSafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawSetSafeLongAliasExample []safelong.SafeLong
	if err := safejson.Unmarshal(data, &rawSetSafeLongAliasExample); err != nil {
		return err
	}
	*a = SetSafeLongAliasExample(rawSetSafeLongAliasExample)
	return nil
}

func (a SetSafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return []safelong.SafeLong(a), nil
}

func (a *SetSafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSetSafeLongAliasExample []safelong.SafeLong
	if err := unmarshal(&rawSetSafeLongAliasExample); err != nil {
		return err
	}
	*a = SetSafeLongAliasExample(rawSetSafeLongAliasExample)
	return nil
}

type SetUuidAliasExample []uuid.UUID

func (a SetUuidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]uuid.UUID(a))
}

func (a *SetUuidAliasExample) UnmarshalJSON(data []byte) error {
	var rawSetUuidAliasExample []uuid.UUID
	if err := safejson.Unmarshal(data, &rawSetUuidAliasExample); err != nil {
		return err
	}
	*a = SetUuidAliasExample(rawSetUuidAliasExample)
	return nil
}

func (a SetUuidAliasExample) MarshalYAML() (interface{}, error) {
	return []uuid.UUID(a), nil
}

func (a *SetUuidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSetUuidAliasExample []uuid.UUID
	if err := unmarshal(&rawSetUuidAliasExample); err != nil {
		return err
	}
	*a = SetUuidAliasExample(rawSetUuidAliasExample)
	return nil
}

type ListRidAliasExample []rid.ResourceIdentifier

func (a ListRidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]rid.ResourceIdentifier(a))
}

func (a *ListRidAliasExample) UnmarshalJSON(data []byte) error {
	var rawListRidAliasExample []rid.ResourceIdentifier
	if err := safejson.Unmarshal(data, &rawListRidAliasExample); err != nil {
		return err
	}
	*a = ListRidAliasExample(rawListRidAliasExample)
	return nil
}

func (a ListRidAliasExample) MarshalYAML() (interface{}, error) {
	return []rid.ResourceIdentifier(a), nil
}

func (a *ListRidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawListRidAliasExample []rid.ResourceIdentifier
	if err := unmarshal(&rawListRidAliasExample); err != nil {
		return err
	}
	*a = ListRidAliasExample(rawListRidAliasExample)
	return nil
}

type DoubleAliasExample float64
type OptionalUuidAliasExample struct {
	Value *uuid.UUID
}

func (a OptionalUuidAliasExample) MarshalText() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return a.Value.MarshalText()
}

func (a *OptionalUuidAliasExample) UnmarshalText(data []byte) error {
	if a.Value == nil {
		a.Value = new(uuid.UUID)
	}
	return a.Value.UnmarshalText(data)
}

type OptionalIntegerAliasExample struct {
	Value *int
}

func (a OptionalIntegerAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalIntegerAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(int)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalIntegerAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalIntegerAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(int)
	}
	return unmarshal(a.Value)
}

type MapBooleanAliasExample map[bool]bool
type AliasString string
type SetIntegerAliasExample []int
type ListIntegerAliasExample []int
type BinaryAliasExample []byte
type OptionalAnyAliasExample struct {
	Value *interface{}
}

func (a OptionalAnyAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalAnyAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(interface{})
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalAnyAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalAnyAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(interface{})
	}
	return unmarshal(a.Value)
}

type OptionalSafeLongAliasExample struct {
	Value *safelong.SafeLong
}

func (a OptionalSafeLongAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalSafeLongAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(safelong.SafeLong)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalSafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalSafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(safelong.SafeLong)
	}
	return unmarshal(a.Value)
}

type IntegerAliasExample int
type OptionalStringAliasExample struct {
	Value *string
}

func (a OptionalStringAliasExample) MarshalText() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return []byte(*a.Value), nil
}

func (a *OptionalStringAliasExample) UnmarshalText(data []byte) error {
	rawOptionalStringAliasExample := string(data)
	a.Value = &rawOptionalStringAliasExample
	return nil
}

type ListUuidAliasExample []uuid.UUID

func (a ListUuidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]uuid.UUID(a))
}

func (a *ListUuidAliasExample) UnmarshalJSON(data []byte) error {
	var rawListUuidAliasExample []uuid.UUID
	if err := safejson.Unmarshal(data, &rawListUuidAliasExample); err != nil {
		return err
	}
	*a = ListUuidAliasExample(rawListUuidAliasExample)
	return nil
}

func (a ListUuidAliasExample) MarshalYAML() (interface{}, error) {
	return []uuid.UUID(a), nil
}

func (a *ListUuidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawListUuidAliasExample []uuid.UUID
	if err := unmarshal(&rawListUuidAliasExample); err != nil {
		return err
	}
	*a = ListUuidAliasExample(rawListUuidAliasExample)
	return nil
}

type OptionalDateTimeAliasExample struct {
	Value *datetime.DateTime
}

func (a OptionalDateTimeAliasExample) MarshalText() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return a.Value.MarshalText()
}

func (a *OptionalDateTimeAliasExample) UnmarshalText(data []byte) error {
	if a.Value == nil {
		a.Value = new(datetime.DateTime)
	}
	return a.Value.UnmarshalText(data)
}

type SetBinaryAliasExample [][]byte
type MapRidAliasExample map[rid.ResourceIdentifier]bool

func (a MapRidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[rid.ResourceIdentifier]bool(a))
}

func (a *MapRidAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapRidAliasExample map[rid.ResourceIdentifier]bool
	if err := safejson.Unmarshal(data, &rawMapRidAliasExample); err != nil {
		return err
	}
	*a = MapRidAliasExample(rawMapRidAliasExample)
	return nil
}

func (a MapRidAliasExample) MarshalYAML() (interface{}, error) {
	return map[rid.ResourceIdentifier]bool(a), nil
}

func (a *MapRidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapRidAliasExample map[rid.ResourceIdentifier]bool
	if err := unmarshal(&rawMapRidAliasExample); err != nil {
		return err
	}
	*a = MapRidAliasExample(rawMapRidAliasExample)
	return nil
}

type ReferenceAliasExample AnyExample

func (a ReferenceAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(AnyExample(a))
}

func (a *ReferenceAliasExample) UnmarshalJSON(data []byte) error {
	var rawReferenceAliasExample AnyExample
	if err := safejson.Unmarshal(data, &rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

func (a ReferenceAliasExample) MarshalYAML() (interface{}, error) {
	return AnyExample(a), nil
}

func (a *ReferenceAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawReferenceAliasExample AnyExample
	if err := unmarshal(&rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

type ListBinaryAliasExample [][]byte
type UuidAliasExample uuid.UUID

func (a UuidAliasExample) MarshalText() ([]byte, error) {
	return uuid.UUID(a).MarshalText()
}

func (a *UuidAliasExample) UnmarshalText(data []byte) error {
	var rawUuidAliasExample uuid.UUID
	if err := rawUuidAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = UuidAliasExample(rawUuidAliasExample)
	return nil
}

type SetRidAliasExample []rid.ResourceIdentifier

func (a SetRidAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]rid.ResourceIdentifier(a))
}

func (a *SetRidAliasExample) UnmarshalJSON(data []byte) error {
	var rawSetRidAliasExample []rid.ResourceIdentifier
	if err := safejson.Unmarshal(data, &rawSetRidAliasExample); err != nil {
		return err
	}
	*a = SetRidAliasExample(rawSetRidAliasExample)
	return nil
}

func (a SetRidAliasExample) MarshalYAML() (interface{}, error) {
	return []rid.ResourceIdentifier(a), nil
}

func (a *SetRidAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSetRidAliasExample []rid.ResourceIdentifier
	if err := unmarshal(&rawSetRidAliasExample); err != nil {
		return err
	}
	*a = SetRidAliasExample(rawSetRidAliasExample)
	return nil
}

type MapSafeLongAliasExample map[safelong.SafeLong]bool

func (a MapSafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[safelong.SafeLong]bool(a))
}

func (a *MapSafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapSafeLongAliasExample map[safelong.SafeLong]bool
	if err := safejson.Unmarshal(data, &rawMapSafeLongAliasExample); err != nil {
		return err
	}
	*a = MapSafeLongAliasExample(rawMapSafeLongAliasExample)
	return nil
}

func (a MapSafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return map[safelong.SafeLong]bool(a), nil
}

func (a *MapSafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapSafeLongAliasExample map[safelong.SafeLong]bool
	if err := unmarshal(&rawMapSafeLongAliasExample); err != nil {
		return err
	}
	*a = MapSafeLongAliasExample(rawMapSafeLongAliasExample)
	return nil
}

type RawOptionalExample struct {
	Value *int
}

func (a RawOptionalExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *RawOptionalExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(int)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a RawOptionalExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *RawOptionalExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(int)
	}
	return unmarshal(a.Value)
}

type OptionalDoubleAliasExample struct {
	Value *float64
}

func (a OptionalDoubleAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalDoubleAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(float64)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalDoubleAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalDoubleAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(float64)
	}
	return unmarshal(a.Value)
}

type RidAliasExample rid.ResourceIdentifier

func (a RidAliasExample) MarshalText() ([]byte, error) {
	return rid.ResourceIdentifier(a).MarshalText()
}

func (a *RidAliasExample) UnmarshalText(data []byte) error {
	var rawRidAliasExample rid.ResourceIdentifier
	if err := rawRidAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = RidAliasExample(rawRidAliasExample)
	return nil
}

type SetDateTimeAliasExample []datetime.DateTime

func (a SetDateTimeAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]datetime.DateTime(a))
}

func (a *SetDateTimeAliasExample) UnmarshalJSON(data []byte) error {
	var rawSetDateTimeAliasExample []datetime.DateTime
	if err := safejson.Unmarshal(data, &rawSetDateTimeAliasExample); err != nil {
		return err
	}
	*a = SetDateTimeAliasExample(rawSetDateTimeAliasExample)
	return nil
}

func (a SetDateTimeAliasExample) MarshalYAML() (interface{}, error) {
	return []datetime.DateTime(a), nil
}

func (a *SetDateTimeAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSetDateTimeAliasExample []datetime.DateTime
	if err := unmarshal(&rawSetDateTimeAliasExample); err != nil {
		return err
	}
	*a = SetDateTimeAliasExample(rawSetDateTimeAliasExample)
	return nil
}

type MapStringAliasExample map[string]bool
type OptionalBearerTokenAliasExample struct {
	Value *bearertoken.Token
}

func (a OptionalBearerTokenAliasExample) MarshalText() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return a.Value.MarshalText()
}

func (a *OptionalBearerTokenAliasExample) UnmarshalText(data []byte) error {
	if a.Value == nil {
		a.Value = new(bearertoken.Token)
	}
	return a.Value.UnmarshalText(data)
}

type ListAnyAliasExample []interface{}
type MapDoubleAliasExample map[float64]bool
type ListSafeLongAliasExample []safelong.SafeLong

func (a ListSafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal([]safelong.SafeLong(a))
}

func (a *ListSafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawListSafeLongAliasExample []safelong.SafeLong
	if err := safejson.Unmarshal(data, &rawListSafeLongAliasExample); err != nil {
		return err
	}
	*a = ListSafeLongAliasExample(rawListSafeLongAliasExample)
	return nil
}

func (a ListSafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return []safelong.SafeLong(a), nil
}

func (a *ListSafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawListSafeLongAliasExample []safelong.SafeLong
	if err := unmarshal(&rawListSafeLongAliasExample); err != nil {
		return err
	}
	*a = ListSafeLongAliasExample(rawListSafeLongAliasExample)
	return nil
}

type DateTimeAliasExample datetime.DateTime

func (a DateTimeAliasExample) MarshalText() ([]byte, error) {
	return datetime.DateTime(a).MarshalText()
}

func (a *DateTimeAliasExample) UnmarshalText(data []byte) error {
	var rawDateTimeAliasExample datetime.DateTime
	if err := rawDateTimeAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = DateTimeAliasExample(rawDateTimeAliasExample)
	return nil
}

type MapDateTimeAliasExample map[datetime.DateTime]bool

func (a MapDateTimeAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[datetime.DateTime]bool(a))
}

func (a *MapDateTimeAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapDateTimeAliasExample map[datetime.DateTime]bool
	if err := safejson.Unmarshal(data, &rawMapDateTimeAliasExample); err != nil {
		return err
	}
	*a = MapDateTimeAliasExample(rawMapDateTimeAliasExample)
	return nil
}

func (a MapDateTimeAliasExample) MarshalYAML() (interface{}, error) {
	return map[datetime.DateTime]bool(a), nil
}

func (a *MapDateTimeAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapDateTimeAliasExample map[datetime.DateTime]bool
	if err := unmarshal(&rawMapDateTimeAliasExample); err != nil {
		return err
	}
	*a = MapDateTimeAliasExample(rawMapDateTimeAliasExample)
	return nil
}

type BooleanAliasExample bool
type MapBinaryAliasExample map[binary.Binary]bool

func (a MapBinaryAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[binary.Binary]bool(a))
}

func (a *MapBinaryAliasExample) UnmarshalJSON(data []byte) error {
	var rawMapBinaryAliasExample map[binary.Binary]bool
	if err := safejson.Unmarshal(data, &rawMapBinaryAliasExample); err != nil {
		return err
	}
	*a = MapBinaryAliasExample(rawMapBinaryAliasExample)
	return nil
}

func (a MapBinaryAliasExample) MarshalYAML() (interface{}, error) {
	return map[binary.Binary]bool(a), nil
}

func (a *MapBinaryAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapBinaryAliasExample map[binary.Binary]bool
	if err := unmarshal(&rawMapBinaryAliasExample); err != nil {
		return err
	}
	*a = MapBinaryAliasExample(rawMapBinaryAliasExample)
	return nil
}

type ListBooleanAliasExample []bool
type OptionalRidAliasExample struct {
	Value *rid.ResourceIdentifier
}

func (a OptionalRidAliasExample) MarshalText() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return a.Value.MarshalText()
}

func (a *OptionalRidAliasExample) UnmarshalText(data []byte) error {
	if a.Value == nil {
		a.Value = new(rid.ResourceIdentifier)
	}
	return a.Value.UnmarshalText(data)
}

type OptionalBooleanAliasExample struct {
	Value *bool
}

func (a OptionalBooleanAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalBooleanAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new(bool)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalBooleanAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalBooleanAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new(bool)
	}
	return unmarshal(a.Value)
}

type ListStringAliasExample []string
type MapIntegerAliasExample map[int]bool
type SetAnyAliasExample []interface{}
type SafeLongAliasExample safelong.SafeLong

func (a SafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(safelong.SafeLong(a))
}

func (a *SafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawSafeLongAliasExample safelong.SafeLong
	if err := safejson.Unmarshal(data, &rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

func (a SafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return safelong.SafeLong(a), nil
}

func (a *SafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSafeLongAliasExample safelong.SafeLong
	if err := unmarshal(&rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

type OptionalBinaryAliasExample struct {
	Value *[]byte
}

func (a OptionalBinaryAliasExample) MarshalJSON() ([]byte, error) {
	if a.Value == nil {
		return nil, nil
	}
	return safejson.Marshal(a.Value)
}

func (a *OptionalBinaryAliasExample) UnmarshalJSON(data []byte) error {
	if a.Value == nil {
		a.Value = new([]byte)
	}
	return safejson.Unmarshal(data, a.Value)
}

func (a OptionalBinaryAliasExample) MarshalYAML() (interface{}, error) {
	return a.Value, nil
}

func (a *OptionalBinaryAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	if a.Value == nil {
		a.Value = new([]byte)
	}
	return unmarshal(a.Value)
}

type MapEnumExampleAlias map[EnumExample]string

func (a MapEnumExampleAlias) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(map[EnumExample]string(a))
}

func (a *MapEnumExampleAlias) UnmarshalJSON(data []byte) error {
	var rawMapEnumExampleAlias map[EnumExample]string
	if err := safejson.Unmarshal(data, &rawMapEnumExampleAlias); err != nil {
		return err
	}
	*a = MapEnumExampleAlias(rawMapEnumExampleAlias)
	return nil
}

func (a MapEnumExampleAlias) MarshalYAML() (interface{}, error) {
	return map[EnumExample]string(a), nil
}

func (a *MapEnumExampleAlias) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawMapEnumExampleAlias map[EnumExample]string
	if err := unmarshal(&rawMapEnumExampleAlias); err != nil {
		return err
	}
	*a = MapEnumExampleAlias(rawMapEnumExampleAlias)
	return nil
}

type ListDoubleAliasExample []float64
type BearerTokenAliasExample bearertoken.Token

func (a BearerTokenAliasExample) MarshalText() ([]byte, error) {
	return bearertoken.Token(a).MarshalText()
}

func (a *BearerTokenAliasExample) UnmarshalText(data []byte) error {
	var rawBearerTokenAliasExample bearertoken.Token
	if err := rawBearerTokenAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = BearerTokenAliasExample(rawBearerTokenAliasExample)
	return nil
}
