// This file was generated by Conjure and should not be manually edited.

package verification

import (
	"github.com/palantir/pkg/bearertoken"
	"github.com/palantir/pkg/datetime"
	"github.com/palantir/pkg/rid"
	"github.com/palantir/pkg/safejson"
	"github.com/palantir/pkg/safelong"
	"github.com/palantir/pkg/uuid"
)

type AliasString string
type StringAliasExample string
type DoubleAliasExample float64
type IntegerAliasExample int
type BooleanAliasExample bool
type SafeLongAliasExample safelong.SafeLong

func (a SafeLongAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(safelong.SafeLong(a))
}

func (a *SafeLongAliasExample) UnmarshalJSON(data []byte) error {
	var rawSafeLongAliasExample safelong.SafeLong
	if err := safejson.Unmarshal(data, &rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

func (a SafeLongAliasExample) MarshalYAML() (interface{}, error) {
	return safelong.SafeLong(a), nil
}

func (a *SafeLongAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawSafeLongAliasExample safelong.SafeLong
	if err := unmarshal(&rawSafeLongAliasExample); err != nil {
		return err
	}
	*a = SafeLongAliasExample(rawSafeLongAliasExample)
	return nil
}

type RidAliasExample rid.ResourceIdentifier

func (a RidAliasExample) MarshalText() ([]byte, error) {
	return rid.ResourceIdentifier(a).MarshalText()
}

func (a *RidAliasExample) UnmarshalText(data []byte) error {
	var rawRidAliasExample rid.ResourceIdentifier
	if err := rawRidAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = RidAliasExample(rawRidAliasExample)
	return nil
}

type BearerTokenAliasExample bearertoken.Token

func (a BearerTokenAliasExample) MarshalText() ([]byte, error) {
	return bearertoken.Token(a).MarshalText()
}

func (a *BearerTokenAliasExample) UnmarshalText(data []byte) error {
	var rawBearerTokenAliasExample bearertoken.Token
	if err := rawBearerTokenAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = BearerTokenAliasExample(rawBearerTokenAliasExample)
	return nil
}

type UuidAliasExample uuid.UUID

func (a UuidAliasExample) MarshalText() ([]byte, error) {
	return uuid.UUID(a).MarshalText()
}

func (a *UuidAliasExample) UnmarshalText(data []byte) error {
	var rawUuidAliasExample uuid.UUID
	if err := rawUuidAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = UuidAliasExample(rawUuidAliasExample)
	return nil
}

type ReferenceAliasExample AnyExample

func (a ReferenceAliasExample) MarshalJSON() ([]byte, error) {
	return safejson.Marshal(AnyExample(a))
}

func (a *ReferenceAliasExample) UnmarshalJSON(data []byte) error {
	var rawReferenceAliasExample AnyExample
	if err := safejson.Unmarshal(data, &rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

func (a ReferenceAliasExample) MarshalYAML() (interface{}, error) {
	return AnyExample(a), nil
}

func (a *ReferenceAliasExample) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var rawReferenceAliasExample AnyExample
	if err := unmarshal(&rawReferenceAliasExample); err != nil {
		return err
	}
	*a = ReferenceAliasExample(rawReferenceAliasExample)
	return nil
}

type DateTimeAliasExample datetime.DateTime

func (a DateTimeAliasExample) MarshalText() ([]byte, error) {
	return datetime.DateTime(a).MarshalText()
}

func (a *DateTimeAliasExample) UnmarshalText(data []byte) error {
	var rawDateTimeAliasExample datetime.DateTime
	if err := rawDateTimeAliasExample.UnmarshalText(data); err != nil {
		return err
	}
	*a = DateTimeAliasExample(rawDateTimeAliasExample)
	return nil
}

type BinaryAliasExample []byte
type EndpointName string
