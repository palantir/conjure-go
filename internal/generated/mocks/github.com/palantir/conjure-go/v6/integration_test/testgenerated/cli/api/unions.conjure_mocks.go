// Copyright (c) 2022 Palantir Technologies. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by godel-mockgen-plugin. DO NOT EDIT.
// Configure in "godel/config/mockgen-plugin.yml" and regenerate with "./godelw mockgen".

package api_mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CustomUnionVisitor is an autogenerated mock type for the CustomUnionVisitor type
type CustomUnionVisitor struct {
	mock.Mock
}

// VisitAsInteger provides a mock function
func (_m *CustomUnionVisitor) VisitAsInteger(v int) error {
	ret := _m.Called(v)
	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// VisitAsString provides a mock function
func (_m *CustomUnionVisitor) VisitAsString(v string) error {
	ret := _m.Called(v)
	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(v)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// VisitUnknown provides a mock function
func (_m *CustomUnionVisitor) VisitUnknown(typeName string) error {
	ret := _m.Called(typeName)
	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(typeName)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// CustomUnionVisitorWithContext is an autogenerated mock type for the CustomUnionVisitorWithContext type
type CustomUnionVisitorWithContext struct {
	mock.Mock
}

// VisitAsIntegerWithContext provides a mock function
func (_m *CustomUnionVisitorWithContext) VisitAsIntegerWithContext(ctx context.Context, v int) error {
	ret := _m.Called(ctx, v)
	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, v)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// VisitAsStringWithContext provides a mock function
func (_m *CustomUnionVisitorWithContext) VisitAsStringWithContext(ctx context.Context, v string) error {
	ret := _m.Called(ctx, v)
	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, v)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}

// VisitUnknownWithContext provides a mock function
func (_m *CustomUnionVisitorWithContext) VisitUnknownWithContext(ctx context.Context, typeName string) error {
	ret := _m.Called(ctx, typeName)
	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, typeName)
	} else {
		r0 = ret.Error(0)
	}
	return r0
}
