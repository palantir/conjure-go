// Copyright (c) 2022 Palantir Technologies. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by godel-mockgen-plugin. DO NOT EDIT.
// Configure in "godel/config/mockgen-plugin.yml" and regenerate with "./godelw mockgen".

package api_mock

import (
	context "context"
	api "github.com/palantir/conjure-go/v6/integration_test/testgenerated/cli/api"
	pflag "github.com/spf13/pflag"
	mock "github.com/stretchr/testify/mock"
)

// CLITestServiceClientProvider is an autogenerated mock type for the CLITestServiceClientProvider type
type CLITestServiceClientProvider struct {
	mock.Mock
}

// Get provides a mock function
func (_m *CLITestServiceClientProvider) Get(ctx context.Context, flags *pflag.FlagSet) (api.TestServiceClient, error) {
	ret := _m.Called(ctx, flags)
	var r0 api.TestServiceClient
	if rf, ok := ret.Get(0).(func(context.Context, *pflag.FlagSet) api.TestServiceClient); ok {
		r0 = rf(ctx, flags)
	} else if v := ret.Get(0); v != nil {
		r0 = v.(api.TestServiceClient)
	}
	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pflag.FlagSet) error); ok {
		r1 = rf(ctx, flags)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}
