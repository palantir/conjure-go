working_dir: &working_dir
  working_directory: /go/src/github.com/palantir/conjure-go

darwin-linux-no-cgo: &darwin-linux-no-cgo
  <<: *working_dir
  docker:
    - image: palantirtechnologies/go:go-darwin-linux-no-cgo-1.14.9-t59
      environment:
        CGO_ENABLED: 0

godel-cache-restore: &godel-cache-restore
  restore_cache:
    keys:
      - &godel-cache-key godel-cache-{{ checksum "godelw" }}-{{ checksum "godel/config/godel.yml" }}-v1
godel-cache-save: &godel-cache-save
  save_cache:
    key: *godel-cache-key
    paths:
      - ~/.godel

go-version: &go-version
  run: go version

godel-version: &godel-version
  run: ./godelw version

define-tests-dir: &define-tests-dir
  run: echo 'export TESTS_DIR=/tmp/test-results' >> $BASH_ENV

mkdir-tests-dir: &mkdir-tests-dir
  run: mkdir -p "${TESTS_DIR}"

store-test-results: &store-test-results
  type: test-results-store
  path: /tmp/test-results

store-artifacts: &store-artifacts
  type: artifacts-store
  path: /tmp/test-results
  destination: test-results

version: 2
jobs:
  verify:
    <<: *working_dir
    docker:
      - image: palantirtechnologies/go:go-darwin-linux-no-cgo-1.14.9-java-11-t59
        environment:
          CGO_ENABLED: 0
    steps:
      - checkout
      - *go-version
      - *godel-cache-restore
      - *godel-version
      - *godel-cache-save
      - run: ./godelw verify --apply=false --skip-test
  test:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-cache-restore
      - *godel-version
      - *godel-cache-save
      - *define-tests-dir
      - *mkdir-tests-dir
      - run: ./godelw test --tags=none --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"
      - *store-test-results
      - *store-artifacts
  conjure-verifier:
    <<: *working_dir
    docker:
      - image: palantirtechnologies/go:go-darwin-linux-no-cgo-1.14.9-t59
        environment:
          CGO_ENABLED: 0
      - image: palantirtechnologies/conjure-verification-server:0.16.2
    steps:
      - checkout
      - *go-version
      - *godel-cache-restore
      - *godel-version
      - *godel-cache-save
      - *define-tests-dir
      - *mkdir-tests-dir
      - run: ./godelw test --tags=conjure-verifier --junit-output="$TESTS_DIR/$CIRCLE_PROJECT_REPONAME-tests.xml"
      - *store-test-results
      - *store-artifacts
  dist:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-cache-restore
      - *godel-version
      - *godel-cache-save
      - run: ./godelw dist
      - save_cache:
          key: out-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
          paths:
            - out
  publish:
    <<: *darwin-linux-no-cgo
    steps:
      - checkout
      - *go-version
      - *godel-cache-restore
      - *godel-version
      - restore_cache:
          keys:
            - out-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
      # gÃ¶del cache only works if cached outputs are newer than source that generates it. CircleCI restore_cache restores
      # the cache with the original modification dates, but the source's modification date in CI is the time of checkout.
      # Manually touch all of the cache output to mark it as being generated after source was checked out.
      - run: find out -exec touch {} \;
      - run: ./godelw publish bintray --url https://api.bintray.com --subject palantir --repository releases --product conjure-go --username "$BINTRAY_USERNAME" --password "$BINTRAY_PASSWORD" --publish --downloads-list

### Workflows ###
requires_jobs: &requires_jobs
  - verify
  - test
  - conjure-verifier
  - dist

all-tags-filter: &all-tags-filter
  filters: { tags: { only: /.*/ } }

workflows:
  version: 2
  verify-dist-publish:
    jobs:
      - verify:
          <<: *all-tags-filter
      - test:
          <<: *all-tags-filter
      - conjure-verifier:
          <<: *all-tags-filter
      - dist:
          <<: *all-tags-filter
      - publish:
          requires: *requires_jobs
          filters:
            tags:
              only: /^v?[0-9]+(\.[0-9]+)+(-rc[0-9]+)?$/
            branches:
              ignore: /.*/
