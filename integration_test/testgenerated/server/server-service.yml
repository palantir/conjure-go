types:
  imports:
    Safe:
      external:
        java: com.palantir.logsafe.Safe
    OtherMarker:
      external:
        java: com.palantir.logsafe.OtherMarker
  definitions:
    default-package: api
    objects:
      StringAlias:
        alias: string
      CustomObject:
        fields:
          data: binary
services:
  TestService:
    name: Test Service
    package: api
    endpoints:
      echo:
        http: GET /echo
        auth: "cookie:PALANTIR_TOKEN"
      getPathParam:
        http: GET /path/string/{myPathParam}
        auth: header
        args:
          myPathParam: string
      getPathParamAlias:
        http: GET /path/alias/{myPathParam}
        auth: header
        args:
          myPathParam: StringAlias
      queryParamList:
        http: GET /pathNew
        auth: header
        args:
          myQueryParam1:
            type: list<string>
            param-type: query
      queryParamListBoolean:
        http: GET /booleanListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<boolean>
            param-type: query
      queryParamListDateTime:
        http: GET /dateTimeListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<datetime>
            param-type: query
      queryParamListDouble:
        http: GET /doubleListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<double>
            param-type: query
      queryParamListInteger:
        http: GET /intListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<integer>
            param-type: query
      queryParamListRid:
        http: GET /ridListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<rid>
            param-type: query
      queryParamListSafeLong:
        http: GET /safeLongListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<safelong>
            param-type: query
      queryParamListString:
        http: GET /stringListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<string>
            param-type: query
      queryParamListUuid:
        http: GET /uuidListQueryVar
        auth: header
        args:
          myQueryParam1:
            type: list<uuid>
            param-type: query
      postPathParam:
        http: POST /path/{myPathParam1}/{myPathParam2}
        auth: header
        args:
          myPathParam1: string
          myPathParam2: boolean
          myBodyParam:
            type: CustomObject
            param-type: body
          myQueryParam1:
            type: string
            param-type: query
            param-id: query1
          myQueryParam2:
            type: string
            param-type: query
          myQueryParam3:
            type: double
            param-type: query
          myQueryParam4:
            type: optional<safelong>
            param-type: query
          myQueryParam5:
            type: optional<string>
            param-type: query
          myHeaderParam1:
            type: safelong
            param-type: header
            param-id: X-My-Header1-Abc
          myHeaderParam2:
            type: optional<uuid>
            param-type: header
            param-id: X-My-Header2
        returns: CustomObject
      postSafeParams:
        http: POST /safe/{myPathParam1}/{myPathParam2}
        auth: header
        args:
          myPathParam1:
            type: string
            markers:
              - Safe
          myPathParam2: boolean
          myBodyParam:
            type: CustomObject
            param-type: body
          myQueryParam1:
            type: string
            param-type: query
            param-id: query1
            markers:
              - Safe
          myQueryParam2:
            type: string
            param-type: query
            markers:
              - Safe
          myQueryParam3:
            type: double
            param-type: query
            markers:
              - OtherMarker
          myQueryParam4:
            type: optional<safelong>
            param-type: query
          myQueryParam5:
            type: optional<string>
            param-type: query
          myHeaderParam1:
            type: safelong
            param-type: header
            param-id: X-My-Header1-Abc
            markers:
              - Safe
          myHeaderParam2:
            type: optional<uuid>
            param-type: header
            param-id: X-My-Header2
      bytes:
        http: GET /bytes
        returns: CustomObject


      getBinary:
        http: GET /binary
        returns: binary
      postBinary:
        http: POST /binary
        args:
          myBytes: binary
        returns: binary
      putBinary:
        http: PUT /binary
        args:
          myBytes: binary
      getOptionalBinary:
        http: GET /optional/binary
        returns: optional<binary>
      chan:
        docs: An endpoint that uses go keywords
        http: POST /chan/{var}
        args:
          var: string
          import: map<string, string>
          type:
            param-type: query
            type: string
          return:
            param-type: header
            param-id: X-My-Header2
            type: safelong
