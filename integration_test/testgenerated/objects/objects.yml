types:
  imports:
    ExternalLong:
      base-type: any
      external:
        java: java.lang.Long
  definitions:
    default-package: api
    objects:
      AnyValue:
        fields:
          value: any
      Basic:
        fields:
          data:
            type: string
            docs: |
              A docs string with
              newline and "quotes".
      Collections:
        fields:
          mapVar: map<string, list<integer>>
          listVar: list<string>
          multiDim: list<list<map<string, integer>>>
      Compound:
        fields:
          obj: Collections
      ExampleUnion:
        union:
          str: string
          strOptional: optional<string>
          other: integer
      ExampleUuid:
        fields:
          uid: uuid
      OptionalUuidAlias:
        alias: optional<uuid>
      RidAlias:
        alias: rid
      UuidAlias:
        alias: uuid
      UuidAlias2:
        alias: Compound
      BinaryAlias:
        alias: binary
      BinaryMap:
        fields:
          map: map<binary,binary>
      BooleanIntegerMap:
        fields:
          map: map<boolean, integer>
      Type:
        docs: A type using go keywords
        fields:
          type: list<string>
          chan: map<string, string>
      Enum:
        values:
          - VALUE
          - VALUES
          - VALUES_1
          - VALUES_1_1
          - VALUE1
          - value: VALUE2
            docs: Docs for an enum value
      EmptyValuesEnum:
        values: []
      Days:
        values:
          - FRIDAY
          - SATURDAY

      NestedAlias1:
        alias: NestedAlias2
      NestedAlias2:
        alias: NestedAlias3
      NestedAlias3:
        alias: optional<string>
      MapOptional:
        fields:
          map: map<OptionalUuidAlias,string>
      OptionalFields:
        fields:
          opt1: optional<string>
          opt2: optional<string>
          reqd: string
          opt3: OptionalUuidAlias

      AnyAlias:
        alias: any
      MapStringAny:
        alias: map<string, any>
      MapStringAnyAlias:
        alias: map<string, AnyAlias>
      MapStringAnyObject:
        fields:
          mapStringAny: MapStringAny
          mapStringAnyAlias: MapStringAnyAlias
      # *LongAlias types below contain simple types and should not generate encoding methods
      LongAlias:
        alias: ExternalLong
      ListLongAlias:
        alias: list<ExternalLong>
      MapLongAlias:
        alias: map<string,ExternalLong>
      # uuid is not a simple type, so encoding methods should be generated
      MapUuidLongAlias:
        alias: map<uuid,ExternalLong>
